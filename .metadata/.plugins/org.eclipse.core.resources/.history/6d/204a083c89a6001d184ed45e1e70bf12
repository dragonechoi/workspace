import java.awt.FlowLayout;
import java.awt.LayoutManager;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		//GUI 프로그래밍 
		//자바언어에서 GUI 개발을 위해 미리 설계된 클래스들을 묶음 API를 제공
		//1.AWT
		//2.Swing - 이 APIs 사용
		//3.JavaFX-별도 프로그램 설치필요
		
		//GUI 맛보기로 Swing API 사용
		
		//1.최상위 컨테이너 생성
		JFrame frame=new JFrame("GUI 테스트");
		
		frame.setSize(500, 400);
		
		// 기본적으로 JFrame은 BordeerLaㅛout 이라는 배치관리자가 성정되어 있음.
		//가장 쉬운 레이아웃 매니저인 FlowLayout으로 변경
		frame.setLayout(new FlowLayout());
		
		//2.컴포넌트 추가하기 
		JButton b1=new JButton("버튼");
		JButton b2=new JButton("Button");
		//컨테이너 추가
		
		 frame.add(b1);
		 frame.add(b2);
		 
		 //JLabel - 글씨를 보여주는 목적의 컴포넌트
		 JLabel label= new JLabel("This is Lable");
		 
		 frame.add(label);
		 // JTextfoe;d -사용자가 글씨를 입력할 수 있도록 하는 컴포넌트
		 JTextField tf=new JTextField(20); // 최소 20글자 사이즈
		 frame.add(tf);
		
		 // 이미지 - 이미지용 컴포넌트가 존재하지 않음.
		 // JLabel에 아이콘 (이미지)을 보여주는 기능이 있음. 이를활용
		 
		 //이미지 아이콘객체 생성
		 ImageIcon icon=new ImageIcon("Image/dao.png");
		 
		 //JLablel 생성하면서 아이콘을 지정
		 JLabel img=new JLabel();
		 img.setIcon(icon);
		 
		 
		//기본 적으로 JFrame 의 x 버튼을 눌러서 창을 닫아도 프로그램이 종료되지않음
		frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);
		frame.setLocation(300, 200); //프레임의 좌상단 좌표 지정
		
		//3.최상위 컨테이너를 화면에 보이기
		frame.setVisible(true);
		

	}

}
